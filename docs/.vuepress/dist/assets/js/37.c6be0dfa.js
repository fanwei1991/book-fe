(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{457:function(t,a,v){"use strict";v.r(a);var _=v(2),s=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"常见的数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的数据结构"}},[t._v("#")]),t._v(" 常见的数据结构")]),t._v(" "),a("ul",[a("li",[t._v("数组")]),t._v(" "),a("li",[t._v("栈")]),t._v(" "),a("li",[t._v("队列")]),t._v(" "),a("li",[t._v("链表")]),t._v(" "),a("li",[t._v("树")]),t._v(" "),a("li",[t._v("图")]),t._v(" "),a("li",[t._v("堆")]),t._v(" "),a("li",[t._v("散列表")])]),t._v(" "),a("h3",{attrs:{id:"栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),a("p",[t._v("只能在某一端插入和删除的特殊线性表，按照先进后出的特性存储数据")]),t._v(" "),a("p",[t._v("先进入的数据被压入栈底，最后的数据在栈顶，需要读数据的时候从栈顶开始弹出数据")]),t._v(" "),a("h3",{attrs:{id:"队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),a("p",[t._v("先进先出")]),t._v(" "),a("h3",{attrs:{id:"链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),a("p",[t._v("是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的")]),t._v(" "),a("p",[t._v("链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成")]),t._v(" "),a("p",[t._v("一般情况，每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域")]),t._v(" "),a("h3",{attrs:{id:"树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#树"}},[t._v("#")]),t._v(" 树")]),t._v(" "),a("p",[t._v("树是典型的非线性结构，在树的结构中，有且仅有一个根结点，该结点没有前驱结点。在树结构中的其他结点都有且仅有一个前驱结点，而且可以有两个以上的后继结点")]),t._v(" "),a("h3",{attrs:{id:"图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图"}},[t._v("#")]),t._v(" 图")]),t._v(" "),a("p",[t._v("一种非线性结构。在图结结构中，数据结点一般称为顶点，而边是顶点的有序偶对。如果两个顶点之间存在一条边，那么就表示这两个顶点具有相邻关系")]),t._v(" "),a("h3",{attrs:{id:"堆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),a("p",[t._v("堆是一种特殊的树形数据结构，每个结点都有一个值，特点是根结点的值最小（或最大），且根结点的两个子树也是一个堆")]),t._v(" "),a("h3",{attrs:{id:"散列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#散列表"}},[t._v("#")]),t._v(" 散列表")]),t._v(" "),a("p",[t._v("若结构中存在关键字和K相等的记录，则必定在f(K)的存储位置上，不需比较便可直接取得所查记录")])])}),[],!1,null,null,null);a.default=s.exports}}]);